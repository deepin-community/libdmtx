Description: make it compile
Author: Roberto Lumbreras <rover@debian.org>

Index: libdmtx-0.7.5/test/simple_test/simple_test.c
===================================================================
--- libdmtx-0.7.5.orig/test/simple_test/simple_test.c	2018-03-25 20:32:01.000000000 +0200
+++ libdmtx-0.7.5/test/simple_test/simple_test.c	2018-08-09 07:41:34.512173058 +0200
@@ -18,6 +18,7 @@
 #include <stdio.h>
 #include <string.h>
 #include <assert.h>
+#include <math.h>
 #include <dmtx.h>
 
 int
@@ -31,6 +32,7 @@
    DmtxDecode     *dec;
    DmtxRegion     *reg;
    DmtxMessage    *msg;
+   int            i, j, k, oned;
 
    fprintf(stdout, "input:  \"%s\"\n", str);
 
@@ -38,10 +40,10 @@
 
    enc = dmtxEncodeCreate();
 
-   //dmtxEncodeSetProp( enc, DmtxPropPixelPacking, DmtxPack16bppRGB );
-   //dmtxEncodeSetProp( enc, DmtxPropPixelPacking, DmtxPack32bppRGB );
-   //dmtxEncodeSetProp( enc, DmtxPropWidth, 160 );
-   //dmtxEncodeSetProp( enc, DmtxPropHeight, 160 );
+   /* dmtxEncodeSetProp( enc, DmtxPropPixelPacking, DmtxPack16bppRGB ); */
+   /* dmtxEncodeSetProp( enc, DmtxPropPixelPacking, DmtxPack32bppRGB ); */
+   /* dmtxEncodeSetProp( enc, DmtxPropWidth, 160 ); */
+   /* dmtxEncodeSetProp( enc, DmtxPropHeight, 160 ); */
 
    assert(enc != NULL);
    dmtxEncodeDataMatrix(enc, strlen((const char *)str), str);
@@ -58,11 +60,11 @@
 
    dmtxEncodeDestroy(&enc);
 
-   fprintf(stdout, "width:  \"%d\"\n", width);
-   fprintf(stdout, "height: \"%d\"\n", height);
-   fprintf(stdout, "bpp:    \"%d\"\n", bytesPerPixel);
+   fprintf(stdout, "width:  \"%zu\"\n", width);
+   fprintf(stdout, "height: \"%zu\"\n", height);
+   fprintf(stdout, "bpp:    \"%zu\"\n", bytesPerPixel);
 
-   for (int i=0; i<width*height; i++){
+   for (i=0; i<width*height; i++){
       fprintf(stdout, "%d", (pxl[i*3])==0);
       if (i%width==width-1){
          fprintf(stdout, "\n");
@@ -81,22 +83,22 @@
    if(reg != NULL) {
       msg = dmtxDecodeMatrixRegion(dec, reg, DmtxUndefined);
 
-      fprintf(stdout, "msg->arraySize :  \"%d\"\n", msg->arraySize );
-      fprintf(stdout, "msg->codeSize  :  \"%d\"\n", msg->codeSize  );
-      fprintf(stdout, "msg->outputSize:  \"%d\"\n", msg->outputSize);
-      int oned = sqrt(msg->arraySize);
-      for (int i=0; i<msg->arraySize; i++){
+      fprintf(stdout, "msg->arraySize :  \"%zu\"\n", msg->arraySize );
+      fprintf(stdout, "msg->codeSize  :  \"%zu\"\n", msg->codeSize  );
+      fprintf(stdout, "msg->outputSize:  \"%zu\"\n", msg->outputSize);
+      oned = sqrt(msg->arraySize);
+      for (i=0; i<msg->arraySize; i++){
          fprintf(stdout, " %c.", msg->array[i]);
          if (i%oned==oned-1){
             fprintf(stdout, "\n");
          }
       }
       fprintf(stdout, "\n\n");
-      for (int j=0; j<msg->codeSize; j++){
+      for (j=0; j<msg->codeSize; j++){
          fprintf(stdout, " %c.", msg->code[j]);
       }
       fprintf(stdout, "\n\n");
-      for (int k=0; k<msg->outputSize; k++){
+      for (k=0; k<msg->outputSize; k++){
          fprintf(stdout, " %c.", msg->output[k]);
       }
       fprintf(stdout, "\n\n");
Index: libdmtx-0.7.5/test/simple_test/Makefile.am
===================================================================
--- libdmtx-0.7.5.orig/test/simple_test/Makefile.am	2018-08-09 07:45:27.405549006 +0200
+++ libdmtx-0.7.5/test/simple_test/Makefile.am	2018-08-09 07:45:48.961676548 +0200
@@ -1,4 +1,4 @@
-AM_CPPFLAGS = -Wshadow -Wall -pedantic -ansi
+AM_CPPFLAGS = -Wshadow -Wall -pedantic
 
 check_PROGRAMS = simple_test
 
